// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// comparePairwise_C
List comparePairwise_C(NumericVector position_of_kegg_enzyme_A, NumericVector position_of_kegg_enzyme_B, NumericMatrix expressions, NumericMatrix ranks);
RcppExport SEXP ctr_comparePairwise_C(SEXP position_of_kegg_enzyme_ASEXP, SEXP position_of_kegg_enzyme_BSEXP, SEXP expressionsSEXP, SEXP ranksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type position_of_kegg_enzyme_A(position_of_kegg_enzyme_ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type position_of_kegg_enzyme_B(position_of_kegg_enzyme_BSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type expressions(expressionsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ranks(ranksSEXP);
    rcpp_result_gen = Rcpp::wrap(comparePairwise_C(position_of_kegg_enzyme_A, position_of_kegg_enzyme_B, expressions, ranks));
    return rcpp_result_gen;
END_RCPP
}
// Cor_Matrix_C
List Cor_Matrix_C(NumericVector v1, NumericVector v2, NumericMatrix expression, NumericMatrix ranks);
RcppExport SEXP ctr_Cor_Matrix_C(SEXP v1SEXP, SEXP v2SEXP, SEXP expressionSEXP, SEXP ranksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v2(v2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type expression(expressionSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ranks(ranksSEXP);
    rcpp_result_gen = Rcpp::wrap(Cor_Matrix_C(v1, v2, expression, ranks));
    return rcpp_result_gen;
END_RCPP
}
// P_NRED_Distance_C
List P_NRED_Distance_C(int dim_matrix, StringVector subsetKOS, NumericVector binNames, NumericVector allBins, StringVector allKOs, NumericMatrix expression, NumericMatrix ranks, List Z_scores);
RcppExport SEXP ctr_P_NRED_Distance_C(SEXP dim_matrixSEXP, SEXP subsetKOSSEXP, SEXP binNamesSEXP, SEXP allBinsSEXP, SEXP allKOsSEXP, SEXP expressionSEXP, SEXP ranksSEXP, SEXP Z_scoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dim_matrix(dim_matrixSEXP);
    Rcpp::traits::input_parameter< StringVector >::type subsetKOS(subsetKOSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type binNames(binNamesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type allBins(allBinsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type allKOs(allKOsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type expression(expressionSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ranks(ranksSEXP);
    Rcpp::traits::input_parameter< List >::type Z_scores(Z_scoresSEXP);
    rcpp_result_gen = Rcpp::wrap(P_NRED_Distance_C(dim_matrix, subsetKOS, binNames, allBins, allKOs, expression, ranks, Z_scores));
    return rcpp_result_gen;
END_RCPP
}
// which_rows_with_no_sd_cpp
NumericVector which_rows_with_no_sd_cpp(NumericMatrix x);
RcppExport SEXP ctr_which_rows_with_no_sd_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(which_rows_with_no_sd_cpp(x));
    return rcpp_result_gen;
END_RCPP
}
